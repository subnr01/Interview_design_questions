Nutanix:


Given a list of integers, select first 2 integers and sum them together, say this sum is y, and remove them from the list. Create a range, x, such that x = [y/2, 3y/2]. In the remaining list of integers, find all pairs of integers whose sum is in x. Remove this pair along with every other pair whose sum is in x until there are no more integers in the list or none of the remaining pairs sum is in x. |input| % 2 == 0  

Dynamic programming question. Given a list of non-overlapping (but intersecting) intervals {[0-2], [2-5], [6-10]} find the largest non-intersecting set with mamimum range. I.e in above | {[2-5], [6-10]} | > | {[0-2], [6-10]} |  

Recursion. Towers of Hanoi. 

Priority tree invariant questions. "Complete". System design of previous projects. APIs. 

String question involving seperating words with carmel case

Given a list of intervals of guests arriving and leaving ie: start time and end time, find the time with maximum guests  

Give a sorted list of integers and a target value, find the index of the value in O(log n) time and O(1) space. The length of this list is infinite. ( good question and difficult) answer using sliding window maybe.

Interleaved printing of 2 strings
Buildings overlap, print outline
Inverse bits in a number
Flatten BST to list
Add 2 numbers given as Linked List
Fibonnaci for big integer
External merge sort  

==============================================================================================
level order traversal with and without recursion and using DP, few other DP based questions, tries, 
networking and DS questions. Design based questions, one question also on implementing a process 
table and killing all the child and grandchild processes once a main one was terminated.

================================================================

phone screen - 1. basic string question (make sure to handle all corner cases and null pointer checks if writing in 'C') 2. Basic concepts of Distributed systems and discussion on how to build a fault tolerant distributed metastore Onsite: 1. Distributed systems, Linux Kernel programming concepts, implementing hashtables and LRU caches, C specific questions like writing a strcompare etc. Make sure you know in-depth about the projects listed in your resume, strong C/C++ programming skills a big plus, good understanding of Operating system concepts like process/threads/paging/synchronizations, Distributed system concepts like CAP theorem, fault tolerance, failure detectors, leader elections and be able to apply these concepts in designing a system.  

================================================================

Data structures (binary tree, list, graph, data manipulations etc. etc).  

================================================================

1.merge two link-list and sort it 2.follow up if two list have same elements you will add them twice how you fix it? 3. database and server cluster if one database server is crash, how do you keep the client access normally once the database server recovery how you rebuild the data 4. database access use locker 5. how do you partition for custom  

================================================================

1. Check whether the tree is binary tree or not. 2. find number in monotonically increasing and decreasing number sequence. 3. Given array find two numbers which sum upto third number. in O(n) with O(n) space, in O(nlogn) with constant space. 4. Given expression with only + and * operators and operands, solve the equation in O(n).  

================================================================

Designing Lock Free Data Structure Q3. memcopy/Memove in C Q4. Simplify linux path Q5. Distance b/w 2 nodes in a binary tree and few more  

=================================================================
Given a string, write code to rotate the the string in-place. That means without any extra buffer. Come up with three different ways of doing so.  

Design and implement File Cache  

===================================
Explain condition variables, how would you implement a fair mutex

=====================================
If we connect two laptops using a router then which routing algorithm will be best

=====================================


